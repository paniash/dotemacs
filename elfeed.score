;;; Elfeed score file             -*- lisp -*-
((version 10)
 ("title"
  (:text "transmon" :value 300 :type s)
  (:text "graphene" :value 50 :type s)
  (:text "fluxonium" :value 300 :type s)
  (:text "gatemon" :value 200 :type s)
  (:text "bolometer" :value 300 :type s)
  (:text "superconducting resonators" :value 300 :type s)
  (:text "superconducting" :value 75 :type s)
  (:text "Josephson" :value 100 :type s)
  (:text "readout" :value 150 :type s)
  (:text "neutral atom" :value -500 :type s)
  (:text "atom" :value -500 :type s)
  (:text "spin" :value -500 :type s)
  (:text "qubit" :value 150 :type s))
 ("content")
 ("title-or-content")
 ("authors"
  (:text "\\(?:M\\(?:\\(?:\\. H\\.\\|ichel\\(?: H\\.\\)?\\) Devoret\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Mikko Möttönen" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:R\\(?:\\(?:\\. J\\.\\|obert\\(?: J\\.\\)?\\)
Schoelkopf\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Yasunobu Nakamura" :value 500 :type w :tags (t arxiv))
  (:text "Guo-Ping Guo" :value 500 :type w :tags (t arxiv))
  (:text "Andreas Wallraff" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:J\\(?:\\(?:\\. P\\.\\|ukka\\(?: P\\.\\)?\\)
Pekola\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Morten Kjaergaard" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:D\\(?:\\(?:\\. I\\.\\|avid\\(?: I\\.\\)?\\)
Schuster\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "\\(?:J\\(?:\\(?:\\. M\\.\\|ohannes\\(?: M\\.\\)?\\)
Fink\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "\\(?:A\\(?:\\(?:\\. A\\.\\|ndrew\\(?: A\\.\\)?\\)
Houck\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "\\(?:A\\(?:\\(?:\\. N\\.\\|ndrew\\(?: N\\.\\)?\\)
Cleland\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "\\(?:P\\(?:\\(?:\\. J\\.\\|eter\\(?: J\\.\\)?\\) Leek\\)\\)"
	 :value 500 :type R :tags (t arxiv))
  (:text "\\(?:P\\(?:\\(?:\\.\\|eter\\) Krogstrup\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "Gheorghe Sorin Paraoanu" :value 500 :type w :tags (t arxiv))
  (:text "Giovanna Tancredi" :value 500 :type w :tags (t arxiv))
  (:text "Moty Heiblum" :value 300 :type w :tags (t arxiv))
  (:text "\\(?:S\\(?:\\(?:\\.\\|erge\\) Rosenblum\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "\\(?:S\\(?:\\(?:\\.\\|hyam\\) Shankar\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "\\(?:J\\(?:\\(?:\\.\\|ohn\\) Martinis\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "Oskar Painter" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:W\\(?:\\(?:\\. D\\.\\|illiam\\(?: D\\.\\)?\\)
Oliver\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Ioan Pop" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:A\\(?:\\(?:\\.\\|lexey\\) Ustinov\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "\\(?:J\\(?:\\(?:\\.\\|ürgen\\) Lisenfeld\\)\\)" :value 500
	 :type R :tags (t arxiv))
  (:text "\\(?:P\\(?:\\(?:\\. J\\.\\|ertti\\(?: J\\.\\)?\\)
Hakonen\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Michael Hatridge" :value 500 :type w :tags (t arxiv))
  (:text "Yiwen Chu" :value 500 :type w :tags (t arxiv))
  (:text "Mohammad Mirhosseini" :value 500 :type w :tags (t arxiv))
  (:text "Mustafa Bakr" :value 500 :type w :tags (t arxiv))
  (:text "\\(?:S\\(?:\\(?:\\. M\\.\\|ergey\\(?: M\\.\\)?\\)
Frolov\\)\\)" :value 500 :type R :tags (t arxiv))
  (:text "Nicolas Roch" :value 500 :type w :tags (t arxiv))
  (:text "Benjamin Sacépé" :value 500 :type w :tags (t arxiv))
  (:text "Benjamin Huard" :value 500 :type w :tags (t arxiv))
  (:text "Jian-Wei Pan" :value 500 :type w :tags (t arxiv))
  (:text "Simone Gasparinetti" :value 500 :type w :tags (t arxiv))
  (:text "Christopher Eichler" :value 500 :type w :tags (t arxiv))
  (:text "Angela Kou" :value 500 :type w :tags (t arxiv))
  (:text "Javad Shabani" :value 500 :type w :tags (t arxiv))
  (:text "Gerhard Kirchmair" :value 500 :type w :tags (t arxiv))
  (:text "Kun Zuo" :value 500 :type w :tags (t arxiv))
  (:text "Alexander Grimm" :value 500 :type w :tags (t arxiv))
  (:text "Chetan Nayak" :value 300 :type w :tags (t arxiv))
  (:text "Mete Atatüre" :value 300 :type w :tags (t arxiv))
  (:text "Dorian Gangloff" :value 300 :type w :tags (t arxiv))
  (:text "Jarryd Pla" :value 300 :type w :tags (t arxiv))
  (:text "\\(?:C\\(?:\\(?:\\. M\\.\\|harles\\(?: M\\.\\)?\\)
Marcus\\)\\)" :value 400 :type R :tags (t arxiv))
  (:text "\\(?:S\\(?:\\(?:\\.\\|aulius\\) Vaitiekėnas\\)\\)" :value
	 400 :type R :tags (t arxiv))
  (:text "Arne Ludwig" :value 200 :type w :tags (t arxiv))
  (:text "Banabir Pal" :value 200 :type w :tags (t arxiv))
  (:text "Stuart Parkin" :value 200 :type w :tags (t arxiv))
  (:text "Vincent Mourik" :value 200 :type w :tags (t arxiv)))
 ("tag")
 ("feed")
 ("adjust-tags"))
