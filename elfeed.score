;;; Elfeed score file             -*- lisp -*-
((version 10)
 ("title"
  (:text "transmon" :value 300 :type s)
  (:text "graphene" :value 50 :type s)
  (:text "fluxonium" :value 300 :type s)
  (:text "gatemon" :value 200 :type s)
  (:text "bolometer" :value 300 :type s)
  (:text "superconducting resonators" :value 300 :type s)
  (:text "superconducting" :value 75 :type s)
  (:text "Josephson" :value 100 :type s)
  (:text "readout" :value 150 :type s)
  (:text "neutral atom" :value -500 :type s)
  (:text "atom" :value -500 :type s)
  (:text "spin" :value -500 :type s)
  (:text "qubit" :value 150 :type s))
 ("content")
 ("title-or-content")
 ("authors"
  (:text "[M]i?c?h?e?l?.+Devoret" :value 500 :type R :tags (t arxiv))
  (:text "[M]i?k?k?o?.+Möttönen" :value 500 :type R :tags (t arxiv))
  (:text "[R]o?b?e?r?t?.+Schoelkopf" :value 500 :type R :tags (t arxiv))
  (:text "[Y]a?s?u?n?o?b?u?.+Nakamura" :value 500 :type R :tags (t arxiv))
  (:text "[A]n?d?r?e?a?s?.+Wallraff" :value 500 :type R :tags (t arxiv))
  (:text "[J]u?k?k?a?.+Pekola" :value 500 :type R :tags (t arxiv))
  (:text "[M]o?r?t?e?n?.+Kjaergaard" :value 500 :type R :tags (t arxiv))
  (:text "[D]a?v?i?d?.+Schuster" :value 500 :type R :tags (t arxiv))
  (:text "[J]o?h?a?n?n?e?s?.+Fink" :value 500 :type R :tags (t arxiv))
  (:text "[A]n?d?r?e?w?.+Houck" :value 500 :type R :tags (t arxiv))
  (:text "[A]n?d?r?e?w?.+Cleland" :value 500 :type R :tags (t arxiv))
  (:text "[P]e?t?e?r?.+Leek" :value 500 :type R :tags (t arxiv))
  (:text "[P]e?t?e?r?.+Krogstrup" :value 500 :type R :tags (t arxiv))
  (:text "[G]h?e?o?r?g?h?e?.+Paraoanu" :value 500 :type R :tags (t arxiv))
  (:text "[M]o?t?y?.+Heiblum" :value 300 :type R :tags (t arxiv))
  (:text "[S]e?r?g?e?.+Rosenblum" :value 500 :type R :tags (t arxiv))
  (:text "[S]h?y?a?m?.+Shankar" :value 500 :type R :tags (t arxiv))
  (:text "[J]o?h?n?.+Martinis" :value 500 :type R :tags (t arxiv))
  (:text "[O]s?k?a?r?.+Painter" :value 500 :type R :tags (t arxiv))
  (:text "[W]i?l?l?i?a?m?.+Oliver" :value 500 :type R :tags (t arxiv))
  (:text "Ioan Pop" :value 500 :type w :tags (t arxiv))
  (:text "[A]l?e?x?e?y?.+Ustinov" :value 500 :type R :tags (t arxiv))
  (:text "[J]ü?r?g?e?n?.+Lisenfeld" :value 500 :type R :tags (t arxiv))
  (:text "[P]e?r?t?t?i?.+Hakonen" :value 500 :type R :tags (t arxiv))
  (:text "[M]i?c?h?a?e?l?.+Hatridge" :value 500 :type R :tags (t arxiv))
  (:text "[Y]i?w?e?n?.+Chu" :value 500 :type R :tags (t arxiv))
  (:text "[M]o?h?a?m?m?a?d?.+Mirhosseini" :value 500 :type R :tags (t arxiv))
  (:text "[M]u?s?t?a?f?a?.+Bakr" :value 500 :type R :tags (t arxiv))
  (:text "[S]e?r?g?e?y?.+Frolov" :value 500 :type R :tags (t arxiv))
  (:text "[N]i?c?h?o?l?a?s?.+Roch" :value 500 :type R :tags (t arxiv))
  (:text "[B]e?n?j?a?m?i?n?.+Huard" :value 500 :type R :tags (t arxiv))
  (:text "[J]i?a?n?-?W?e?i?.+Pan" :value 500 :type R :tags (t arxiv))
  (:text "[S]i?m?o?n?e?.+Gasparinetti" :value 500 :type R :tags (t arxiv))
  (:text "[C]h?r?i?s?t?o?p?h?e?r?.+Eichler" :value 500 :type R :tags (t arxiv))
  (:text "[A]n?g?e?l?a?.+Kou" :value 500 :type R :tags (t arxiv))
  (:text "[J]a?v?a?d?.+Shabani" :value 500 :type R :tags (t arxiv))
  (:text "[G]e?r?h?a?r?d?.+Kirchmair" :value 500 :type R :tags (t arxiv))
  (:text "[K]u?n?.+Zuo" :value 500 :type R :tags (t arxiv))
  (:text "[A]l?e?x?a?n?d?e?r?.+Grimm" :value 500 :type R :tags (t arxiv))
  (:text "[C]h?e?t?a?n?.+Nayak" :value 300 :type R :tags (t arxiv))
  (:text "[M]e?t?e?.+Atatüre" :value 300 :type R :tags (t arxiv))
  (:text "[D]o?r?i?a?n?.+Gangloff" :value 300 :type R :tags (t arxiv))
  (:text "[J]a?r?r?y?d?.+Pla" :value 300 :type R :tags (t arxiv))
  (:text "[C]h?a?r?l?e?s?.+Marcus" :value 300 :type R :tags (t arxiv))
  (:text "[S]a?u?l?i?u?s?.+Vaitiekėnas" :value 300 :type R :tags (t arxiv))
  (:text "[A]r?n?e?.+Ludwig" :value 200 :type R :tags (t arxiv))
  (:text "Banabir pal" :value 200 :type w :tags (t arxiv))
  (:text "[S]t?u?a?r?t?.+Parkin" :value 200 :type R :tags (t arxiv))
  (:text "[A]n?d?r?e?a?.+Hofmann" :value 200 :type R :tags (t arxiv))
  (:text "[V]i?n?c?e?n?t?.+Mourik" :value 200 :type R :tags (t arxiv)))
 ("tag")
 ("feed")
 ("adjust-tags"))
